---
interface Props {
    title: string;
    description?: string;
}

const { title, description = "Desarrollador Full Stack especializado en crear soluciones digitales innovadoras y escalables." } = Astro.props;
---

<!DOCTYPE html>
<html lang="es">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta name="description" content={description} />
        <title>{title}</title>
        <!-- Precargar fuentes -->
        <!-- Carga de Phosphor Icons para íconos -->
        <link rel="icon" type="image/jpg" href="/images/profilePhoto.jpg" />
        <style is:global>
            /* Estilos personalizados para las fuentes */
            body {
                font-family: 'Inter', sans-serif;
                color: #E0E0E0; /* Color de texto claro para fondos oscuros */
            }
            h1, h2, h3, h4, h5, h6 {
                font-family: 'Poppins', sans-serif;
            }
            /* Colores personalizados de Tailwind para la nueva paleta (Violeta y Negro) */
            /* Colores Base */
            .bg-primary-dark { background-color: #1a1a1a; } /* Casi negro */
            .text-primary-dark { color: #1a1a1a; }
            .bg-light-bg { background-color: #2c2c2c; } /* Gris oscuro para fondos ligeros */
            .text-light-bg { color: #2c2c2c; }

            /* Violetas */
            .bg-violet-deep { background-color: #4A148C; } /* Violeta oscuro profundo */
            .bg-violet-mid { background-color: #6A1B9A; }  /* Violeta medio */
            .bg-violet-light { background-color: #8E24AA; } /* Violeta claro */
            .text-violet-light { color: #8E24AA; }

            /* Acentos (manteniendo verde y azul para contraste fuerte) */
            .bg-accent-green { background-color: #2ECC71; } /* Verde esmeralda */
            .text-accent-green { color: #2ECC71; }
            .bg-accent-blue { background-color: #3498DB; } /* Azul vibrante */
            .text-accent-blue { color: #3498DB; }

            /* Colores de Texto */
            .text-dark-text { color: #1a1a1a; } /* Negro para tipografía en secciones claras */
            .text-light-text { color: #E0E0E0; } /* Blanco/gris claro para tipografía en secciones oscuras */
            .text-muted-light { color: #B0B0B0; } /* Gris claro para texto mutado en fondos oscuros */

            /* Estilo para efectos hover de botones */
            .btn-primary:hover {
                opacity: 0.9;
                transform: translateY(-2px);
                box-shadow: 0 4px 10px rgba(46, 204, 113, 0.4);
            }
            .btn-secondary:hover {
                opacity: 0.9;
                transform: translateY(-2px);
                box-shadow: 0 4px 10px rgba(52, 152, 219, 0.4);
            }
            .whatsapp-button:hover {
                transform: scale(1.1);
                box-shadow: 0 8px 16px rgba(37, 211, 102, 0.6);
            }

            /* Animación sutil para las secciones */
            .fade-in-section {
                opacity: 0;
                transform: translateY(20px);
                transition: opacity 0.8s ease-out, transform 0.8s ease-out;
            }
            .fade-in-section.is-visible {
                opacity: 1;
                transform: translateY(0);
            }
        </style>
    </head>
    <body class="bg-primary-dark text-light-text leading-relaxed">
        <slot />
        <script>
            // JavaScript para la animación de las secciones
            const sections = document.querySelectorAll('.fade-in-section');

            const observerOptions = {
                root: null,
                rootMargin: '0px',
                threshold: 0.2 // Cuando el 20% de la sección es visible
            };

            const observer = new IntersectionObserver((entries, observer) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('is-visible');
                        observer.unobserve(entry.target); // Dejar de observar una vez que sea visible
                    }
                });
            }, observerOptions);

            sections.forEach(section => {
                observer.observe(section);
            });
        </script>
    </body>
</html> 